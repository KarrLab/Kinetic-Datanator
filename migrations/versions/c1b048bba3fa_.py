"""empty message

Revision ID: c1b048bba3fa
Revises: cd1c72ecc003
Create Date: 2018-03-06 18:13:01.617527

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c1b048bba3fa'
down_revision = 'cd1c72ecc003'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('_experimentmetadata',
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('cell_compartment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cell_compartment_name'), 'cell_compartment', ['name'], unique=True)
    op.create_table('cell_line',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('characteristic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.Column('value', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('growth_status', sa.String(length=255), nullable=True),
    sa.Column('media', sa.String(length=255), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('ph', sa.Float(), nullable=True),
    sa.Column('growth_system', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_format',
    sa.Column('_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('bio_assay_data_cubes', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('_id')
    )
    op.create_table('experiment_design',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiment_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('method',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('comments', sa.String(length=255), nullable=True),
    sa.Column('performer', sa.String(length=255), nullable=True),
    sa.Column('hardware', sa.String(length=255), nullable=True),
    sa.Column('software', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('progress',
    sa.Column('database_name', sa.String(), nullable=False),
    sa.Column('amount_loaded', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('database_name')
    )
    op.create_table('resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('namespace', sa.String(length=255), nullable=True),
    sa.Column('_id', sa.String(length=255), nullable=True),
    sa.Column('release_date', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('synonym',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taxon',
    sa.Column('ncbi_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('ncbi_id')
    )
    op.create_table('variable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.Column('value', sa.String(length=255), nullable=True),
    sa.Column('units', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('_experimentmetadata_experimentdesign',
    sa.Column('_experimentmetadata_id', sa.Integer(), nullable=True),
    sa.Column('experiment_design_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_experimentmetadata_id'], ['_experimentmetadata.id'], ),
    sa.ForeignKeyConstraint(['experiment_design_id'], ['experiment_design.id'], )
    )
    op.create_index(op.f('ix__experimentmetadata_experimentdesign__experimentmetadata_id'), '_experimentmetadata_experimentdesign', ['_experimentmetadata_id'], unique=False)
    op.create_index(op.f('ix__experimentmetadata_experimentdesign_experiment_design_id'), '_experimentmetadata_experimentdesign', ['experiment_design_id'], unique=False)
    op.create_table('_experimentmetadata_experimenttype',
    sa.Column('_experimentmetadata_id', sa.Integer(), nullable=True),
    sa.Column('experiment_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_experimentmetadata_id'], ['_experimentmetadata.id'], ),
    sa.ForeignKeyConstraint(['experiment_type_id'], ['experiment_type.id'], )
    )
    op.create_index(op.f('ix__experimentmetadata_experimenttype__experimentmetadata_id'), '_experimentmetadata_experimenttype', ['_experimentmetadata_id'], unique=False)
    op.create_index(op.f('ix__experimentmetadata_experimenttype_experiment_type_id'), '_experimentmetadata_experimenttype', ['experiment_type_id'], unique=False)
    op.create_table('_experimentmetadata_method',
    sa.Column('_experimentmetadata_id', sa.Integer(), nullable=True),
    sa.Column('method_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_experimentmetadata_id'], ['_experimentmetadata.id'], ),
    sa.ForeignKeyConstraint(['method_id'], ['method.id'], )
    )
    op.create_index(op.f('ix__experimentmetadata_method__experimentmetadata_id'), '_experimentmetadata_method', ['_experimentmetadata_id'], unique=False)
    op.create_index(op.f('ix__experimentmetadata_method_method_id'), '_experimentmetadata_method', ['method_id'], unique=False)
    op.create_table('_experimentmetadata_resource',
    sa.Column('_experimentmetadata_id', sa.Integer(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_experimentmetadata_id'], ['_experimentmetadata.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], )
    )
    op.create_index(op.f('ix__experimentmetadata_resource__experimentmetadata_id'), '_experimentmetadata_resource', ['_experimentmetadata_id'], unique=False)
    op.create_index(op.f('ix__experimentmetadata_resource_resource_id'), '_experimentmetadata_resource', ['resource_id'], unique=False)
    op.create_table('_experimentmetadata_taxon',
    sa.Column('_experimentmetadata_id', sa.Integer(), nullable=True),
    sa.Column('taxon_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_experimentmetadata_id'], ['_experimentmetadata.id'], ),
    sa.ForeignKeyConstraint(['taxon_id'], ['taxon.ncbi_id'], )
    )
    op.create_index(op.f('ix__experimentmetadata_taxon__experimentmetadata_id'), '_experimentmetadata_taxon', ['_experimentmetadata_id'], unique=False)
    op.create_index(op.f('ix__experimentmetadata_taxon_taxon_id'), '_experimentmetadata_taxon', ['taxon_id'], unique=False)
    op.create_table('_metadata_cell_line',
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.Column('cell_line_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.ForeignKeyConstraint(['cell_line_id'], ['cell_line.id'], )
    )
    op.create_index(op.f('ix__metadata_cell_line__metadata_id'), '_metadata_cell_line', ['_metadata_id'], unique=False)
    op.create_index(op.f('ix__metadata_cell_line_cell_line_id'), '_metadata_cell_line', ['cell_line_id'], unique=False)
    op.create_table('_metadata_characteristic',
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.Column('characteristic_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.ForeignKeyConstraint(['characteristic_id'], ['characteristic.id'], )
    )
    op.create_index(op.f('ix__metadata_characteristic__metadata_id'), '_metadata_characteristic', ['_metadata_id'], unique=False)
    op.create_index(op.f('ix__metadata_characteristic_characteristic_id'), '_metadata_characteristic', ['characteristic_id'], unique=False)
    op.create_table('_metadata_compartment',
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.Column('compartment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.ForeignKeyConstraint(['compartment_id'], ['cell_compartment.id'], )
    )
    op.create_index(op.f('ix__metadata_compartment__metadata_id'), '_metadata_compartment', ['_metadata_id'], unique=False)
    op.create_index(op.f('ix__metadata_compartment_compartment_id'), '_metadata_compartment', ['compartment_id'], unique=False)
    op.create_table('_metadata_conditions',
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.Column('conditions_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.ForeignKeyConstraint(['conditions_id'], ['conditions.id'], )
    )
    op.create_index(op.f('ix__metadata_conditions__metadata_id'), '_metadata_conditions', ['_metadata_id'], unique=False)
    op.create_index(op.f('ix__metadata_conditions_conditions_id'), '_metadata_conditions', ['conditions_id'], unique=False)
    op.create_table('_metadata_method',
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.Column('method_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.ForeignKeyConstraint(['method_id'], ['method.id'], )
    )
    op.create_index(op.f('ix__metadata_method__metadata_id'), '_metadata_method', ['_metadata_id'], unique=False)
    op.create_index(op.f('ix__metadata_method_method_id'), '_metadata_method', ['method_id'], unique=False)
    op.create_table('_metadata_resource',
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], )
    )
    op.create_index(op.f('ix__metadata_resource__metadata_id'), '_metadata_resource', ['_metadata_id'], unique=False)
    op.create_index(op.f('ix__metadata_resource_resource_id'), '_metadata_resource', ['resource_id'], unique=False)
    op.create_table('_metadata_synonym',
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.Column('synonym_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.ForeignKeyConstraint(['synonym_id'], ['synonym.id'], )
    )
    op.create_index(op.f('ix__metadata_synonym__metadata_id'), '_metadata_synonym', ['_metadata_id'], unique=False)
    op.create_index(op.f('ix__metadata_synonym_synonym_id'), '_metadata_synonym', ['synonym_id'], unique=False)
    op.create_table('_metadata_taxon',
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.Column('taxon_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.ForeignKeyConstraint(['taxon_id'], ['taxon.ncbi_id'], )
    )
    op.create_index(op.f('ix__metadata_taxon__metadata_id'), '_metadata_taxon', ['_metadata_id'], unique=False)
    op.create_index(op.f('ix__metadata_taxon_taxon_id'), '_metadata_taxon', ['taxon_id'], unique=False)
    op.create_table('_metadata_variable',
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.Column('variable_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.ForeignKeyConstraint(['variable_id'], ['variable.id'], )
    )
    op.create_index(op.f('ix__metadata_variable__metadata_id'), '_metadata_variable', ['_metadata_id'], unique=False)
    op.create_index(op.f('ix__metadata_variable_variable_id'), '_metadata_variable', ['variable_id'], unique=False)
    op.create_table('experiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_experimentmetadata_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_experimentmetadata_id'], ['_experimentmetadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('observation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_metadata_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['_metadata_id'], ['_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('physical_entity',
    sa.Column('observation_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['observation_id'], ['observation.id'], ),
    sa.PrimaryKeyConstraint('observation_id')
    )
    op.create_table('physical_property',
    sa.Column('observation_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['observation_id'], ['observation.id'], ),
    sa.PrimaryKeyConstraint('observation_id')
    )
    op.create_table('rna_seq_experiment',
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('accession_number', sa.String(), nullable=True),
    sa.Column('exp_name', sa.String(), nullable=True),
    sa.Column('has_fastq_files', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.PrimaryKeyConstraint('experiment_id')
    )
    op.create_table('abundance_dataset',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('coverage', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['physical_property.observation_id'], ),
    sa.PrimaryKeyConstraint('dataset_id'),
    sa.UniqueConstraint('file_name')
    )
    op.create_table('protein_complex',
    sa.Column('complex_id', sa.Integer(), nullable=False),
    sa.Column('complex_name', sa.String(length=255), nullable=True),
    sa.Column('go_id', sa.String(length=255), nullable=True),
    sa.Column('go_dsc', sa.String(length=255), nullable=True),
    sa.Column('funcat_id', sa.String(length=255), nullable=True),
    sa.Column('funcat_dsc', sa.String(length=255), nullable=True),
    sa.Column('su_cmt', sa.String(length=255), nullable=True),
    sa.Column('complex_cmt', sa.String(length=255), nullable=True),
    sa.Column('disease_cmt', sa.String(length=255), nullable=True),
    sa.Column('class_name', sa.String(length=255), nullable=True),
    sa.Column('family_name', sa.String(length=255), nullable=True),
    sa.Column('molecular_weight', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['complex_id'], ['physical_entity.observation_id'], ),
    sa.PrimaryKeyConstraint('complex_id')
    )
    op.create_table('protein_interactions',
    sa.Column('interaction_id', sa.Integer(), nullable=False),
    sa.Column('participant_a', sa.String(length=255), nullable=True),
    sa.Column('participant_b', sa.String(length=255), nullable=True),
    sa.Column('interaction', sa.String(length=255), nullable=True),
    sa.Column('site_a', sa.String(length=255), nullable=True),
    sa.Column('site_b', sa.String(length=255), nullable=True),
    sa.Column('stoich_a', sa.String(length=255), nullable=True),
    sa.Column('stoich_b', sa.String(length=255), nullable=True),
    sa.Column('interaction_type', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['interaction_id'], ['physical_property.observation_id'], ),
    sa.PrimaryKeyConstraint('interaction_id')
    )
    op.create_table('reference_genome',
    sa.Column('reference_genome_id', sa.Integer(), nullable=False),
    sa.Column('namespace', sa.String(length=255), nullable=True),
    sa.Column('organism_strain', sa.String(length=255), nullable=True),
    sa.Column('download_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['reference_genome_id'], ['physical_property.observation_id'], ),
    sa.PrimaryKeyConstraint('reference_genome_id')
    )
    op.create_table('rna_seq_dataset',
    sa.Column('sample_id', sa.Integer(), nullable=False),
    sa.Column('experiment_accession_number', sa.String(), nullable=True),
    sa.Column('sample_name', sa.String(), nullable=True),
    sa.Column('assay', sa.String(), nullable=True),
    sa.Column('ensembl_organism_strain', sa.String(), nullable=True),
    sa.Column('read_type', sa.String(), nullable=True),
    sa.Column('full_strain_specificity', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['sample_id'], ['physical_property.observation_id'], ),
    sa.PrimaryKeyConstraint('sample_id')
    )
    op.create_table('structure',
    sa.Column('struct_id', sa.Integer(), nullable=False),
    sa.Column('_value_smiles', sa.String(length=255), nullable=True),
    sa.Column('_value_inchi', sa.String(length=255), nullable=True),
    sa.Column('_structure_formula_connectivity', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['struct_id'], ['physical_property.observation_id'], ),
    sa.PrimaryKeyConstraint('struct_id')
    )
    op.create_table('compound',
    sa.Column('compound_id', sa.Integer(), nullable=False),
    sa.Column('compound_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('_is_name_ambiguous', sa.Boolean(), nullable=True),
    sa.Column('structure_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['compound_id'], ['physical_entity.observation_id'], ),
    sa.ForeignKeyConstraint(['structure_id'], ['structure.struct_id'], ),
    sa.PrimaryKeyConstraint('compound_id')
    )
    op.create_table('kinetic_law',
    sa.Column('kinetic_law_id', sa.Integer(), nullable=False),
    sa.Column('enzyme_id', sa.Integer(), nullable=True),
    sa.Column('enzyme_type', sa.String(length=255), nullable=True),
    sa.Column('tissue', sa.String(length=255), nullable=True),
    sa.Column('mechanism', sa.String(length=255), nullable=True),
    sa.Column('equation', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['enzyme_id'], ['protein_complex.complex_id'], ),
    sa.ForeignKeyConstraint(['kinetic_law_id'], ['physical_property.observation_id'], ),
    sa.PrimaryKeyConstraint('kinetic_law_id')
    )
    op.create_index(op.f('ix_kinetic_law_enzyme_id'), 'kinetic_law', ['enzyme_id'], unique=False)
    op.create_table('protein_subunit',
    sa.Column('subunit_id', sa.Integer(), nullable=False),
    sa.Column('subunit_name', sa.String(length=255), nullable=True),
    sa.Column('uniprot_id', sa.String(length=255), nullable=True),
    sa.Column('entrez_id', sa.Integer(), nullable=True),
    sa.Column('ec_number', sa.String(length=255), nullable=True),
    sa.Column('gene_name', sa.String(length=255), nullable=True),
    sa.Column('gene_syn', sa.String(length=255), nullable=True),
    sa.Column('class_name', sa.String(length=255), nullable=True),
    sa.Column('family_name', sa.String(length=255), nullable=True),
    sa.Column('coefficient', sa.Integer(), nullable=True),
    sa.Column('canonical_sequence', sa.String(length=255), nullable=True),
    sa.Column('mass', sa.Integer(), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('molecular_weight', sa.Float(), nullable=True),
    sa.Column('pax_load', sa.Integer(), nullable=True),
    sa.Column('proteincomplex_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['proteincomplex_id'], ['protein_complex.complex_id'], ),
    sa.ForeignKeyConstraint(['subunit_id'], ['physical_entity.observation_id'], ),
    sa.PrimaryKeyConstraint('subunit_id')
    )
    op.create_table('rnaseqdataset_referencegenome',
    sa.Column('sample_id', sa.Integer(), nullable=True),
    sa.Column('reference_genome_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reference_genome_id'], ['reference_genome.reference_genome_id'], ),
    sa.ForeignKeyConstraint(['sample_id'], ['rna_seq_dataset.sample_id'], )
    )
    op.create_index(op.f('ix_rnaseqdataset_referencegenome_reference_genome_id'), 'rnaseqdataset_referencegenome', ['reference_genome_id'], unique=False)
    op.create_index(op.f('ix_rnaseqdataset_referencegenome_sample_id'), 'rnaseqdataset_referencegenome', ['sample_id'], unique=False)
    op.create_table('rnaseqdataset_rnaseqexperiment',
    sa.Column('experiment_id', sa.Integer(), nullable=True),
    sa.Column('sample_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['rna_seq_experiment.experiment_id'], ),
    sa.ForeignKeyConstraint(['sample_id'], ['rna_seq_dataset.sample_id'], )
    )
    op.create_index(op.f('ix_rnaseqdataset_rnaseqexperiment_experiment_id'), 'rnaseqdataset_rnaseqexperiment', ['experiment_id'], unique=False)
    op.create_index(op.f('ix_rnaseqdataset_rnaseqexperiment_sample_id'), 'rnaseqdataset_rnaseqexperiment', ['sample_id'], unique=False)
    op.create_table('abundance_data',
    sa.Column('abundance_id', sa.Integer(), nullable=False),
    sa.Column('abundance', sa.Float(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('subunit_id', sa.Integer(), nullable=True),
    sa.Column('pax_load', sa.Integer(), nullable=True),
    sa.Column('uniprot_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['abundance_dataset.dataset_id'], ),
    sa.ForeignKeyConstraint(['subunit_id'], ['protein_subunit.subunit_id'], ),
    sa.PrimaryKeyConstraint('abundance_id')
    )
    op.create_index(op.f('ix_abundance_data_subunit_id'), 'abundance_data', ['subunit_id'], unique=False)
    op.create_table('concentration',
    sa.Column('concentration_id', sa.Integer(), nullable=False),
    sa.Column('compound_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('error', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.compound_id'], ),
    sa.ForeignKeyConstraint(['concentration_id'], ['physical_property.observation_id'], ),
    sa.PrimaryKeyConstraint('concentration_id')
    )
    op.create_table('dna_binding_dataset',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('complex_id', sa.Integer(), nullable=True),
    sa.Column('subunit_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['complex_id'], ['protein_complex.complex_id'], ),
    sa.ForeignKeyConstraint(['dataset_id'], ['physical_property.observation_id'], ),
    sa.ForeignKeyConstraint(['subunit_id'], ['protein_subunit.subunit_id'], ),
    sa.PrimaryKeyConstraint('dataset_id')
    )
    op.create_table('parameter',
    sa.Column('parameter_id', sa.Integer(), nullable=False),
    sa.Column('kinetic_law_id', sa.Integer(), nullable=True),
    sa.Column('sabio_type', sa.Integer(), nullable=True),
    sa.Column('compound_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('error', sa.Float(), nullable=True),
    sa.Column('units', sa.String(length=255), nullable=True),
    sa.Column('observed_name', sa.String(length=255), nullable=True),
    sa.Column('observed_sabio_type', sa.Integer(), nullable=True),
    sa.Column('observed_value', sa.Float(), nullable=True),
    sa.Column('observed_error', sa.Float(), nullable=True),
    sa.Column('observed_units', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.compound_id'], ),
    sa.ForeignKeyConstraint(['kinetic_law_id'], ['kinetic_law.kinetic_law_id'], ),
    sa.PrimaryKeyConstraint('parameter_id')
    )
    op.create_index(op.f('ix_parameter_compound_id'), 'parameter', ['compound_id'], unique=False)
    op.create_index(op.f('ix_parameter_sabio_type'), 'parameter', ['sabio_type'], unique=False)
    op.create_index(op.f('ix_parameter_units'), 'parameter', ['units'], unique=False)
    op.create_table('reaction',
    sa.Column('reaction_id', sa.Integer(), nullable=False),
    sa.Column('compound_id', sa.Integer(), nullable=True),
    sa.Column('compartment_id', sa.Integer(), nullable=True),
    sa.Column('coefficient', sa.Float(), nullable=True),
    sa.Column('_is_reactant', sa.Boolean(), nullable=True),
    sa.Column('_is_product', sa.Boolean(), nullable=True),
    sa.Column('_is_modifier', sa.Boolean(), nullable=True),
    sa.Column('rxn_type', sa.String(length=255), nullable=True),
    sa.Column('kinetic_law_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['compartment_id'], ['cell_compartment.id'], ),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.compound_id'], ),
    sa.ForeignKeyConstraint(['kinetic_law_id'], ['kinetic_law.kinetic_law_id'], ),
    sa.PrimaryKeyConstraint('reaction_id')
    )
    op.create_table('subunit_interaction',
    sa.Column('protein_subunit_id', sa.Integer(), nullable=True),
    sa.Column('interaction_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['interaction_id'], ['protein_interactions.interaction_id'], ),
    sa.ForeignKeyConstraint(['protein_subunit_id'], ['protein_subunit.subunit_id'], )
    )
    op.create_index(op.f('ix_subunit_interaction_interaction_id'), 'subunit_interaction', ['interaction_id'], unique=False)
    op.create_index(op.f('ix_subunit_interaction_protein_subunit_id'), 'subunit_interaction', ['protein_subunit_id'], unique=False)
    op.create_table('dna_bidning_data',
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('frequency_a', sa.Integer(), nullable=True),
    sa.Column('frequency_c', sa.Integer(), nullable=True),
    sa.Column('frequency_g', sa.Integer(), nullable=True),
    sa.Column('frequency_t', sa.Integer(), nullable=True),
    sa.Column('jaspar_id', sa.Integer(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dna_binding_dataset.dataset_id'], ),
    sa.PrimaryKeyConstraint('position_id')
    )
    op.create_index(op.f('ix_dna_bidning_data_position'), 'dna_bidning_data', ['position'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dna_bidning_data_position'), table_name='dna_bidning_data')
    op.drop_table('dna_bidning_data')
    op.drop_index(op.f('ix_subunit_interaction_protein_subunit_id'), table_name='subunit_interaction')
    op.drop_index(op.f('ix_subunit_interaction_interaction_id'), table_name='subunit_interaction')
    op.drop_table('subunit_interaction')
    op.drop_table('reaction')
    op.drop_index(op.f('ix_parameter_units'), table_name='parameter')
    op.drop_index(op.f('ix_parameter_sabio_type'), table_name='parameter')
    op.drop_index(op.f('ix_parameter_compound_id'), table_name='parameter')
    op.drop_table('parameter')
    op.drop_table('dna_binding_dataset')
    op.drop_table('concentration')
    op.drop_index(op.f('ix_abundance_data_subunit_id'), table_name='abundance_data')
    op.drop_table('abundance_data')
    op.drop_index(op.f('ix_rnaseqdataset_rnaseqexperiment_sample_id'), table_name='rnaseqdataset_rnaseqexperiment')
    op.drop_index(op.f('ix_rnaseqdataset_rnaseqexperiment_experiment_id'), table_name='rnaseqdataset_rnaseqexperiment')
    op.drop_table('rnaseqdataset_rnaseqexperiment')
    op.drop_index(op.f('ix_rnaseqdataset_referencegenome_sample_id'), table_name='rnaseqdataset_referencegenome')
    op.drop_index(op.f('ix_rnaseqdataset_referencegenome_reference_genome_id'), table_name='rnaseqdataset_referencegenome')
    op.drop_table('rnaseqdataset_referencegenome')
    op.drop_table('protein_subunit')
    op.drop_index(op.f('ix_kinetic_law_enzyme_id'), table_name='kinetic_law')
    op.drop_table('kinetic_law')
    op.drop_table('compound')
    op.drop_table('structure')
    op.drop_table('rna_seq_dataset')
    op.drop_table('reference_genome')
    op.drop_table('protein_interactions')
    op.drop_table('protein_complex')
    op.drop_table('abundance_dataset')
    op.drop_table('rna_seq_experiment')
    op.drop_table('physical_property')
    op.drop_table('physical_entity')
    op.drop_table('observation')
    op.drop_table('experiment')
    op.drop_index(op.f('ix__metadata_variable_variable_id'), table_name='_metadata_variable')
    op.drop_index(op.f('ix__metadata_variable__metadata_id'), table_name='_metadata_variable')
    op.drop_table('_metadata_variable')
    op.drop_index(op.f('ix__metadata_taxon_taxon_id'), table_name='_metadata_taxon')
    op.drop_index(op.f('ix__metadata_taxon__metadata_id'), table_name='_metadata_taxon')
    op.drop_table('_metadata_taxon')
    op.drop_index(op.f('ix__metadata_synonym_synonym_id'), table_name='_metadata_synonym')
    op.drop_index(op.f('ix__metadata_synonym__metadata_id'), table_name='_metadata_synonym')
    op.drop_table('_metadata_synonym')
    op.drop_index(op.f('ix__metadata_resource_resource_id'), table_name='_metadata_resource')
    op.drop_index(op.f('ix__metadata_resource__metadata_id'), table_name='_metadata_resource')
    op.drop_table('_metadata_resource')
    op.drop_index(op.f('ix__metadata_method_method_id'), table_name='_metadata_method')
    op.drop_index(op.f('ix__metadata_method__metadata_id'), table_name='_metadata_method')
    op.drop_table('_metadata_method')
    op.drop_index(op.f('ix__metadata_conditions_conditions_id'), table_name='_metadata_conditions')
    op.drop_index(op.f('ix__metadata_conditions__metadata_id'), table_name='_metadata_conditions')
    op.drop_table('_metadata_conditions')
    op.drop_index(op.f('ix__metadata_compartment_compartment_id'), table_name='_metadata_compartment')
    op.drop_index(op.f('ix__metadata_compartment__metadata_id'), table_name='_metadata_compartment')
    op.drop_table('_metadata_compartment')
    op.drop_index(op.f('ix__metadata_characteristic_characteristic_id'), table_name='_metadata_characteristic')
    op.drop_index(op.f('ix__metadata_characteristic__metadata_id'), table_name='_metadata_characteristic')
    op.drop_table('_metadata_characteristic')
    op.drop_index(op.f('ix__metadata_cell_line_cell_line_id'), table_name='_metadata_cell_line')
    op.drop_index(op.f('ix__metadata_cell_line__metadata_id'), table_name='_metadata_cell_line')
    op.drop_table('_metadata_cell_line')
    op.drop_index(op.f('ix__experimentmetadata_taxon_taxon_id'), table_name='_experimentmetadata_taxon')
    op.drop_index(op.f('ix__experimentmetadata_taxon__experimentmetadata_id'), table_name='_experimentmetadata_taxon')
    op.drop_table('_experimentmetadata_taxon')
    op.drop_index(op.f('ix__experimentmetadata_resource_resource_id'), table_name='_experimentmetadata_resource')
    op.drop_index(op.f('ix__experimentmetadata_resource__experimentmetadata_id'), table_name='_experimentmetadata_resource')
    op.drop_table('_experimentmetadata_resource')
    op.drop_index(op.f('ix__experimentmetadata_method_method_id'), table_name='_experimentmetadata_method')
    op.drop_index(op.f('ix__experimentmetadata_method__experimentmetadata_id'), table_name='_experimentmetadata_method')
    op.drop_table('_experimentmetadata_method')
    op.drop_index(op.f('ix__experimentmetadata_experimenttype_experiment_type_id'), table_name='_experimentmetadata_experimenttype')
    op.drop_index(op.f('ix__experimentmetadata_experimenttype__experimentmetadata_id'), table_name='_experimentmetadata_experimenttype')
    op.drop_table('_experimentmetadata_experimenttype')
    op.drop_index(op.f('ix__experimentmetadata_experimentdesign_experiment_design_id'), table_name='_experimentmetadata_experimentdesign')
    op.drop_index(op.f('ix__experimentmetadata_experimentdesign__experimentmetadata_id'), table_name='_experimentmetadata_experimentdesign')
    op.drop_table('_experimentmetadata_experimentdesign')
    op.drop_table('variable')
    op.drop_table('taxon')
    op.drop_table('synonym')
    op.drop_table('resource')
    op.drop_table('progress')
    op.drop_table('method')
    op.drop_table('experiment_type')
    op.drop_table('experiment_design')
    op.drop_table('data_format')
    op.drop_table('conditions')
    op.drop_table('characteristic')
    op.drop_table('cell_line')
    op.drop_index(op.f('ix_cell_compartment_name'), table_name='cell_compartment')
    op.drop_table('cell_compartment')
    op.drop_table('_metadata')
    op.drop_table('_experimentmetadata')
    # ### end Alembic commands ###
